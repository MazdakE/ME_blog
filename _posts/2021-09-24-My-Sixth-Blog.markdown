---
layout: post
title: "Sixth Blog Post"
subtitle: "Lecture 6 - Web application in cloud"
date: 2021-09-16 22:55
categories: jekyll update
---

# Introduction

In this section we are creating a ASP.NET Web Application with Razor Pages. This application will have the same functions as the previous exercise, which you can read in [here](https://mazdake.github.io/ME_blog/2021/09/22/My-Fifth-Blog.html). Afterwards we added a Dockerfile which pushes our image to Azure Container Registry, also callen ACR. We could then pull our image from ACR and run it from inside Docker Desktop. The difference between this blog and the previous one is that it's now more user friendly with POST, GET and DELETE. We can also pull our Docker Image from another computer without any errors.

The topics I will go through in this blog is the following: 

- Describing our application and what it does 
- Describing the code
- How we run our app from Azure App Service
- Expenses for running such an application


## Describing our application and what it does

So we created a simple application with 3 pages. The first page which also is an index page to the web site containes is a post-page and contains a post form for posting a song with 2 parameters such as artist and name of the song. When submitting the form a new data is created in our cosmos database. I will describe how we access our cosmos db in next section. 

![music_post](/ME_blog/images/music_post.png){:class="img-fluid"}

When added a `WOOHOO` will be shown. 

The Get-page simply takes a search term which in this case is the name of the artist and sends the request back to the user with song and name on a content page. Visit the following site to see for yourself https://musicappweb20210924131459.azurewebsites.net/.

![music_get](/ME_blog/images/music_get.png){:class="img-fluid"}

![music_get_output](/ME_blog/images/music_get_output.png){:class="img-fluid"}

_Image illustrates the output of what the client recieves when searching for Eminem_

Last page is the Delete-page which deletes the song the client wishes to remove from the database. The cient types in the id of that song and submits. After that the song is gone from our database. If cient regrets to remove the song, just go back to Post-page and add that song back. 

![music_delete](/ME_blog/images/music_delete.png){:class="img-fluid"}

_Image illustrates deleteing a song with song id. If the cosmos db contains that id it will give you an output **Successfully deleted**_

## Describing the code
For accessing cosmos db we had to go through this [cosmos db documentation](https://docs.microsoft.com/en-us/azure/cosmos-db/sql/sql-api-dotnet-application). First we downloaded NuGet package `Microsoft.Azure.Cosmos` and then we got to our Startup.cs and added the following dependency injections, illustrated in the images below:

![Cosmos_startup1](/ME_blog/images/startup_cosmos1.png){:class="img-fluid"}
_A fluent API to access the database_

![Cosmos_startup2](/ME_blog/images/startup_cosmos2.png){:class="img-fluid"}
_This image illustrates the InitializeCosmosClientInstanceAsync-method which is created under the confige-method in Startup.cs. The method takes the values from appsetting.json so that we can access our database_

![Cosmos_appsettings](/ME_blog/images/cosmos_appsettings.png){:class="img-fluid"}
_Cosmos Db needs account, key, database name and container name in order to access our specific database_ 

In order to insert, delete or get data from our database we created a service folder in our solution and added two classes (CosmosDbService.cs and ICosmosDbService.cs). ICosmosDbService.cs is simply a declaration for posting, getting or deleting a song from the database. The logics are in CosmosDbService. 

**ICosmosDbService**

<pre class="csharp" style="font-family:monospace;"><ol><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">MusicAppWeb.Models</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">System</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">System.Collections.Generic</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">System.Linq</span><span style="color: #008000;">;</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">System.Threading.Tasks</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">namespace</span> MusicAppWeb<span style="color: #008000;">.</span><span style="color: #0000FF;">Services</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #008000;">&#123;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">    <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">interface</span> ICosmosDbService</div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">    <span style="color: #008000;">&#123;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        Task<span style="color: #008000;">&lt;</span>IEnumerable<span style="color: #008000;">&lt;</span>Music<span style="color: #008000;">&gt;&gt;</span> GetItemsAsync<span style="color: #008000;">&#40;</span><span style="color: #6666cc; font-weight: bold;">string</span> query<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//Task&lt;Song&gt; GetItemAsync(string id);</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        Task AddItemAsync<span style="color: #008000;">&#40;</span>Music music<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//Task UpdateItemAsync(string id, Song song);</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        Task DeleteItemAsync<span style="color: #008000;">&#40;</span><span style="color: #6666cc; font-weight: bold;">string</span> id<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">    <span style="color: #008000;">&#125;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #008000;">&#125;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li></ol></pre>

**CosmosDbService**

<pre class="csharp" style="font-family:monospace;"><ol><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">System.Collections.Generic</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">System.Linq</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">System.Threading.Tasks</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">Microsoft.Azure.Cosmos</span><span style="color: #008000;">;</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">using</span> <span style="color: #008080;">MusicAppWeb.Models</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #0600FF; font-weight: bold;">namespace</span> MusicAppWeb<span style="color: #008000;">.</span><span style="color: #0000FF;">Services</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #008000;">&#123;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">    <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">class</span> CosmosDbService <span style="color: #008000;">:</span> ICosmosDbService</div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">    <span style="color: #008000;">&#123;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #0600FF; font-weight: bold;">private</span> Container _container<span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #0600FF; font-weight: bold;">public</span> CosmosDbService<span style="color: #008000;">&#40;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            CosmosClient dbClient,</div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #6666cc; font-weight: bold;">string</span> databaseName,</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #6666cc; font-weight: bold;">string</span> containerName<span style="color: #008000;">&#41;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008000;">&#123;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #0600FF; font-weight: bold;">this</span><span style="color: #008000;">.</span>_container <span style="color: #008000;">=</span> dbClient<span style="color: #008000;">.</span><span style="color: #0000FF;">GetContainer</span><span style="color: #008000;">&#40;</span>databaseName, containerName<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008000;">&#125;</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #0600FF; font-weight: bold;">async</span> Task AddItemAsync<span style="color: #008000;">&#40;</span>Music music<span style="color: #008000;">&#41;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008000;">&#123;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #0600FF; font-weight: bold;">await</span> <span style="color: #0600FF; font-weight: bold;">this</span><span style="color: #008000;">.</span>_container<span style="color: #008000;">.</span><span style="color: #0000FF;">CreateItemAsync</span><span style="color: #008000;">&lt;</span>Music<span style="color: #008000;">&gt;</span><span style="color: #008000;">&#40;</span>music, <span style="color: #008000;">new</span> PartitionKey<span style="color: #008000;">&#40;</span>music<span style="color: #008000;">.</span><span style="color: #0000FF;">Id</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008000;">&#125;</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #0600FF; font-weight: bold;">async</span> Task DeleteItemAsync<span style="color: #008000;">&#40;</span><span style="color: #6666cc; font-weight: bold;">string</span> id<span style="color: #008000;">&#41;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008000;">&#123;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #0600FF; font-weight: bold;">await</span> <span style="color: #0600FF; font-weight: bold;">this</span><span style="color: #008000;">.</span>_container<span style="color: #008000;">.</span><span style="color: #0000FF;">DeleteItemAsync</span><span style="color: #008000;">&lt;</span>Music<span style="color: #008000;">&gt;</span><span style="color: #008000;">&#40;</span>id, <span style="color: #008000;">new</span> PartitionKey<span style="color: #008000;">&#40;</span>id<span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008000;">&#125;</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #0600FF; font-weight: bold;">async</span> Task<span style="color: #008000;">&lt;</span>IEnumerable<span style="color: #008000;">&lt;</span>Music<span style="color: #008000;">&gt;&gt;</span> GetItemsAsync<span style="color: #008000;">&#40;</span><span style="color: #6666cc; font-weight: bold;">string</span> queryString<span style="color: #008000;">&#41;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008000;">&#123;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #0600FF; font-weight: bold;">var</span> query <span style="color: #008000;">=</span> <span style="color: #0600FF; font-weight: bold;">this</span><span style="color: #008000;">.</span>_container<span style="color: #008000;">.</span><span style="color: #0000FF;">GetItemQueryIterator</span><span style="color: #008000;">&lt;</span>Music<span style="color: #008000;">&gt;</span><span style="color: #008000;">&#40;</span><span style="color: #008000;">new</span> QueryDefinition<span style="color: #008000;">&#40;</span>queryString<span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            List<span style="color: #008000;">&lt;</span>Music<span style="color: #008000;">&gt;</span> results <span style="color: #008000;">=</span> <span style="color: #008000;">new</span> List<span style="color: #008000;">&lt;</span>Music<span style="color: #008000;">&gt;</span><span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #0600FF; font-weight: bold;">while</span> <span style="color: #008000;">&#40;</span>query<span style="color: #008000;">.</span><span style="color: #0000FF;">HasMoreResults</span><span style="color: #008000;">&#41;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #008000;">&#123;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">                <span style="color: #0600FF; font-weight: bold;">var</span> response <span style="color: #008000;">=</span> <span style="color: #0600FF; font-weight: bold;">await</span> query<span style="color: #008000;">.</span><span style="color: #0000FF;">ReadNextAsync</span><span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">                results<span style="color: #008000;">.</span><span style="color: #0000FF;">AddRange</span><span style="color: #008000;">&#40;</span>response<span style="color: #008000;">.</span><span style="color: #0000FF;">ToList</span><span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #008000;">&#125;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">            <span style="color: #0600FF; font-weight: bold;">return</span> results<span style="color: #008000;">;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008000;">&#125;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//public async Task&lt;Item&gt; GetItemAsync(string id)</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//{</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//    try</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//    {</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//        ItemResponse&lt;Item&gt; response = await this._container.ReadItemAsync&lt;Item&gt;(id, new PartitionKey(id));</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//        return response.Resource;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//    }</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//    catch (CosmosException ex) when (ex.StatusCode == System.Net.HttpStatusCode.NotFound)</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//    {</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//        return null;</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//    }</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//}</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//public async Task UpdateItemAsync(string id, Item item)</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//{</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//    await this._container.UpsertItemAsync&lt;Item&gt;(item, new PartitionKey(id));</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">        <span style="color: #008080; font-style: italic;">//}</span></div></li><li style="font-weight: bold; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">    <span style="color: #008000;">&#125;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"><span style="color: #008000;">&#125;</span></div></li><li style="font-weight: normal; vertical-align:top;"><div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;">&nbsp;</div></li></ol></pre>

### Describing the pages

**1. Post** 

As mentioned we use three pages. Index-page contains the post-method and its focus in on posting data to database. 

![PostModel](/ME_blog/images/postModel.png){:class="img-fluid"}

So the post-page contains a simple form with two inputs, artist and name. The submit button goes to `IndexModel.PageModel`, `OnPost-method` to post the variables created to our database which we are connected to. `asp-for` in those input tags inserts the values given from the client in a `BindProperty` called BundleMusic. We will see the BundleProperty in the image below. 

![IndexModelPost](/ME_blog/images/IndexModel_post.png){:class="img-fluid"}

So in IndexModel we see a composition of the `_cosmosDbService` so that we can in this case insert data to our database. Next is the `BindProperty` attribute we use to BundleMusic so that we can be able to have the values given from the client. The values are then beeing used to implement the clients wishes and add data to the database by using `AddItemAsync`. Last it returns a WOOHOO.  

**2. Get**

![GetModel](/ME_blog/images/GetModel.png){:class="img-fluid"}

In the Get Razorpage we simply see a form with one input which takes the artist name and has the same procedure as post, but inserts the value from client in a BindProperty called `SearchTerm`. 

![GetPage](/ME_blog/images/GetPage.png){:class="img-fluid"}

In GetModel Page we have almost the same structure and PostModel Page, but heere we respect the errors. We also use GetItemsAsync-method to get the song the client wishes to see. 

**3. Delete**

![DeleteModel](/ME_blog/images/DeleteModel.png){:class="img-fluid"}

Delete Razor page has the same structure as the Get, but takes the Id of the song that the client wishes to delete. 

![DeletePost](/ME_blog/images/DeletePost.png){:class="img-fluid"}

The concept is the same as Post and Get. The difference here is that we instead insert the id from the client to OnPost-method and uses DeleteItemAsync-method to remove the data from database. 

## How we run our app from Azure App Service

So when we started our project we had the chance to create a Dockerfile, which we did. The Docker Imahe was already implemented inside the Dockerfile at start. Next was to pull our .NET image by using these command lines: 

```
docker build . -t musicwebapp
```
to build our docker. 
```
docker images
```
to see if the image has been created. 

Before pushing our image we had to tag it
```
docker tag musicwebapp musicwebapp.azurecr.io/musicwebapp:v1
```
After that we wrote 
```
docker images
```
to make sure that it's correctly tagged

we logged in to our registry 
```
az login
az acr login --name <your-acr-name>
```
then we pushed the image 
```
docker push <acrname>.azurecr.io/webapp:v1
```
last step we got to our container registry, copied the `Docker pull command` and pasted it in

```
docker push <acrname>.azurecr.io/webapp:v1
docker run -d webapp
```
The steps that I just told can be found in this [site](https://blog.hildenco.com/2020/10/pushing-docker-images-to-azure.html).


### To configure an app service-app in Azure Portal

Now that our app works with our Cosmos Db and Dockerfile, next is to deploy the app to Azure App Service. To do this I follow this [site](https://docs.microsoft.com/en-us/azure/cosmos-db/sql/sql-api-dotnet-application#deploy-the-application-to-azure) step-by-step on how to do it.

In Visual Studio I right clicked my project in **solution explorer**, slected **Publish** and then a winow showed up where I could create my Azure App Service. You then fill the in the informations required and publish it by clicking on the Publish button on the upper right corner, of course after you're done with your form. A Domain will be given to you and you can then access it through the internet. 

## Estimated costs 

**Few users**: Approximately $78 

**Many users**: Approximately $9826 

## References
[Access to Cosmos Db](https://docs.microsoft.com/en-us/azure/cosmos-db/sql/sql-api-dotnet-application)

[Docker Image to Azure](tps://blog.hildenco.com/2020/10/pushing-docker-images-to-azure.html)

[Azure App Services](https://docs.microsoft.com/sv-se/azure/app-service/configure-common)

[Price estimation](https://azure.microsoft.com/sv-se/pricing/calculator/)
